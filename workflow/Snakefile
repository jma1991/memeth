configfile: "config/config.yaml"

rule all:
    input:
        "results/import.rds",
        "results/getmset.rds",
        "results/getrset.rds",
        "results/detpqc.pdf",
        "results/msetqc.pdf",
        "results/getgrset.rds",
        "results/densityqcbeta_pre.pdf",
        "results/densityqcm_pre.pdf",
        "results/controlstripqc.pdf",
        "results/boxplotqc_pre.pdf",
        "results/normalise.rds",
        "results/densityqcbeta_post.pdf",
        "results/densityqcm_post.pdf",
        "results/boxplotqc_post.pdf",
        "results/filter.rds"

# import original RGSet object using minfi
rule import:
    input:
        dir = "data"
    output:
        rds = "results/import.rds"
    log:
        out = "results/import.out",
        err = "results/import.err"
    message:
        "Importing data..."
    conda:
        "envs/minfi.yaml"
    script:
        "scripts/import.R"

# run qc for methyl seq object
rule controlstripqc:
    input:
        rds = "results/import.rds"
    output:
        pdf = "results/controlstripqc.pdf"
    log:
        out = "results/controlstripqc.out",
        err = "results/controlstripqc.err"
    message:
        "Run QC for RG Set object (QC baked into minfi)"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/controlstripqc.R"

# get MethylSet object (from RGSet)
rule getmset:
    input:
        rds = "results/import.rds"
    output:
        rds = "results/getmset.rds"
    log:
        out = "results/getmset.out",
        err = "results/getmset.err"
    message:
        "Converting RGset to MSet"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/getmset.R"

# get Ratio set object, have options for Beta and M values
rule getrset:
    input:
        rds = "results/getmset.rds"
    output:
        rds = "results/getrset.rds"
    params:
        what = "both",
        keepCN = True
    log:
        out = "results/getrset.out",
        err = "results/getrset.err"
    message:
        "Converting MSet to RSet"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/getrset.R"

# run detection p value qc for RGset objects
rule detpqc:
    input:
        rds = "results/import.rds"
    output:
        pdf = "results/detpqc.pdf"
    params:
        fill = config["fill"]["detpqc"],
        dir = "data"
    log:
        out = "results/detpqc.out",
        err = "results/detpqc.err"
    message:
        "Plot detection p-value QC for RGSeq object"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/detpqc.R"

# run qc for methyl seq object
rule msetqc:
    input:
        rds = "results/getmset.rds"
    output:
        pdf = "results/msetqc.pdf"
    log:
        out = "results/msetqc.out",
        err = "results/msetqc.err"
    message:
        "Run QC for Methyl Set object"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/msetqc.R"

# get Gene Ratio set object GRset
rule getgrset:
    input:
        rds = "results/getmset.rds"
    output:
        rds = "results/getgrset.rds"
    log:
        out = "results/getgrset.out",
        err = "results/getgrset.err"
    message:
        "Converting MSet to GRSet"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/getgrset.R"

# run Density qc for GRset object
rule densityqcbeta_pre:
    input:
        rds = "results/getgrset.rds"
    output:
        pdf = "results/densityqcbeta_pre.pdf"
    params:
        dir = "data",
        fill = config["fill"]["densityqc"],
        type = "beta"
    log:
        out = "results/densityqcbeta_pre.out",
        err = "results/densityqcbeta_pre.err"
    message:
        "Run Density QC for GRset object"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/densityqc.R"

# run Density qc for GRset object
rule densityqcm_pre:
    input:
        rds = "results/getgrset.rds"
    output:
        pdf = "results/densityqcm_pre.pdf"
    params:
        dir = "data",
        fill = config["fill"]["densityqc"],
        type = "M"
    log:
        out = "results/densityqcm_pre.out",
        err = "results/densityqcm_pre.err"
    message:
        "Run Density QC for GRset object"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/densityqc.R"

# run Density qc for GRset object
rule boxplotqc_pre:
    input:
        rds = "results/getgrset.rds"
    output:
        pdf = "results/boxplotqc_pre.pdf"
    params:
        dir = "data",
        fill = config["fill"]["boxplotqc"]
    log:
        out = "results/boxplotqc_pre.out",
        err = "results/boxplotqc_pre.err"
    message:
        "Run Boxplot QC for GRset object"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/boxplotqc.R"

## Normalise - see minfi for normalisation options
rule normalise:
    input:
        rds = "results/import.rds"
    output:
        rds = "results/normalise.rds"
    params:
        type = "preprocessFunnorm"
    log:
        out = "results/normalise.out",
        err = "results/normalise.err"
    message:
        "Normalise RGSet (Will also ratio convert and annotate to GRSet)"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/normalise.R"

# run Density qc for GRset object
rule densityqcbeta_post:
    input:
        rds = "results/normalise.rds"
    output:
        pdf = "results/densityqcbeta_post.pdf"
    params:
        dir = "data",
        fill = config["fill"]["densityqc"],
        type = "beta"
    log:
        out = "results/densityqcbeta_post.out",
        err = "results/densityqcbeta_post.err"
    message:
        "Run Density QC for GRset object"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/densityqc.R"

# run Density qc for GRset object
rule densityqcm_post:
    input:
        rds = "results/normalise.rds"
    output:
        pdf = "results/densityqcm_post.pdf"
    params:
        dir = "data",
        fill = config["fill"]["densityqc"],
        type = "M"
    log:
        out = "results/densityqcm_post.out",
        err = "results/densityqcm_post.err"
    message:
        "Run Density QC for GRset object"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/densityqc.R"

# run Density qc for GRset object
rule boxplotqc_post:
    input:
        rds = "results/normalise.rds"
    output:
        pdf = "results/boxplotqc_post.pdf"
    params:
        dir = "data",
        fill = config["fill"]["boxplotqc"]
    log:
        out = "results/boxplotqc_post.out",
        err = "results/boxplotqc_post.err"
    message:
        "Run Boxplot QC for GRset object"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/boxplotqc.R"


# Filter non specific probes - see filter.R for more details
# Makes big difference to downstream analysis
rule filter:
    input:
        rds = "results/normalise.rds"
    output:
        rds = "results/filter.rds"
    params:
        rgset = "results/import.rds",
        xprobes = "resources/48639-non-specific-probes-Illumina450k.csv",
        anno = "hg38",
        array = "HM450"
    log:
        out = "results/filter.out",
        err = "results/filter.err"
    message:
        "Run Filter for normailsed rds"
    conda:
        "envs/environment.yaml"
    script:
        "scripts/filter.R"

# PCA


# Density heatmap



# DMRCate Cpg



# DMRCate DMR



#  Rank plot